<?xml version="1.0" encoding="UTF-8"?>
<otawa-script
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

<name>rcmc</name>

<info>
This script provides support for rcmc.
</info>

<id>
    <arch>rcmc</arch>
    <abi>elf</abi>
    <mach>riscv</mach>
</id>


<configuration>

</configuration>

<platform>
	<processor class="otawa::hard::Processor">
		<arch>rcmc</arch>
		<model>riscv</model>
	
		<stages>
			<stage id="Fetch">
				<name>Fetch</name>
				<width>1</width>
				<type>FETCH</type>
			</stage>
			<stage id="Decode">
				<name>Decode</name>
				<width>1</width>
				<type>LAZY</type>
			</stage>
		
			<stage id="Execute">
				<name>Execute</name>
				<type>EXEC</type>
				<width>1</width>
				<ordered>true</ordered>
				<fus>
					<fu id="INT">
						<name>Simple ALU instructions</name>
						<width>1</width>
						<latency>1</latency>
						<pipelined>false</pipelined>
					</fu>
					<fu id="DIV">
						<name>Integer Division</name>
						<width>1</width>
						<latency>35</latency>
						<pipelined>false</pipelined>
					</fu>
					<fu id="MUL">
						<name>Integer Multiplication</name>
						<width>1</width>
						<latency>5</latency>
						<pipelined>false</pipelined>
					</fu>
					<fu id="FMUL">
						<name>Floating Point Multiplication</name>
						<width>1</width>
						<latency>4</latency>
						<pipelined>false</pipelined>
					</fu>
					<fu id="FDIVS">
						<name>Floating Point Division (Single Precision)</name>
						<width>1</width>
						<latency>33</latency>
						<pipelined>false</pipelined>
					</fu>
					<fu id="FDIVD">
						<name>Floating Point Division (Double Precision)</name>
						<width>1</width>
						<latency>41</latency>
						<pipelined>false</pipelined>
					</fu>
					<fu id="FSQRTS">
						<name>Floating Point SQRT (Single Precision)</name>
						<width>1</width>
						<latency>45</latency>
						<pipelined>false</pipelined>
					</fu>
					<fu id="FSQRTD">
						<name>Floating Point SQRT (Double Precision)</name>
						<width>1</width>
						<latency>57</latency>
						<pipelined>false</pipelined>
					</fu>
					<fu id="FSMALL">
						<name>Floating Point Small Operations</name>
						<width>1</width>
						<latency>1</latency>
						<pipelined>false</pipelined>
					</fu>
					<fu id="FCVT">
						<name>Floating Point Conversion Operations</name>
						<width>1</width>
						<latency>2</latency>
						<pipelined>false</pipelined>
					</fu>
					<fu id="Jump"><!--  add branch information -->
						<name>Unconditional Jumps</name>
						<width>1</width>
						<latency>1</latency>
						<pipelined>false</pipelined>
						<branch>true</branch>
					</fu>
					<fu id="Load">
						<name>Load Instructions</name>
						<width>1</width>
						<latency>1</latency>
							<!-- memory wait is performed in MEM stage -->
						<pipelined>false</pipelined>
					</fu>
					<fu id="Syscall">
						<name>System Calls, Breakpoints, Traps</name>
						<width>1</width>
						<latency>3</latency>  <!-- not sure about this -->
						<pipelined>false</pipelined>
					</fu>
				</fus>
				<dispatch>
					<inst>
						<type>IS_ALU|IS_INT</type>
						<fu ref="INT"/>
					</inst>
					<inst>
						<type>IS_ALU|IS_INT|IS_DIV</type>
						<fu ref="DIV"/>
					</inst>
					<inst>
						<type>IS_ALU|IS_INT|IS_MUL</type>
						<fu ref="MUL"/>
					</inst>
					<inst>
						<type>IS_CONTROL</type>
						<fu ref="Jump"/>
					</inst>
					<inst>
						<type>IS_MEM|IS_LOAD</type>
						<fu ref="Load"/> 
					</inst>
					<inst>
						<type>IS_MEM|IS_STORE</type>
						<fu ref="INT"/>
					</inst>
					<inst>
						<type>IS_MEM|IS_LOAD|IS_FLOAT</type>
						<fu ref="INT"/>
					</inst>
					<inst>
						<type>IS_MEM|IS_STORE|IS_FLOAT</type>
						<fu ref="INT"/>
					</inst>
					<inst>
						<type>IS_MUL|IS_FLOAT</type>
						<fu ref="FMUL"/>
					</inst>
					<inst>
						<type>IS_DIV|IS_FLOAT</type>
						<fu ref="FDIVS"/>
					</inst>
					<inst>
						<type>IS_DIV|IS_FLOAT|IS_SPECIAL</type>
						<fu ref="FDIVD"/>
					</inst>
					<inst>
						<type>IS_SHIFT|IS_FLOAT</type>
						<fu ref="FSQRTS"/>
					</inst>
					<inst>
						<type>IS_SHIFT|IS_FLOAT|IS_SPECIAL</type>
						<fu ref="FSQRTD"/>
					</inst>
					<inst>
						<type>IS_FLOAT</type>
						<fu ref="FSMALL"/>
					</inst>
					<inst>
						<type>IS_FLOAT|IS_INT</type>
						<fu ref="FCVT"/>
					</inst>
					<inst>
						<type>IS_INTERN</type>
						<fu ref="INT"/>  <!-- fence: 1 cycle -->
					</inst>
					<inst>
						<!--  |IS_SPECIAL -->
						<type>IS_TRAP</type>
						<fu ref="Syscall"/>
					</inst>
				</dispatch>
			</stage>
		
			<stage id="Memory">
				<name>Memory</name>
				<type>LAZY</type>
				<width>1</width>
				<mem>true</mem>
			</stage>
		
			<stage id="Write">
				<name>Write Back</name>
				<type>COMMIT</type>
				<width>1</width>
			</stage>
		</stages>
	
		<queues>
		</queues>
	
	</processor>


	<memory>
		<banks>
			<bank>
				<name>Local Memory</name>
				<address>0x00000000</address>
				<size>0</size> <!-- "0 size represents a full coverage of the address space, that is, a memory of size 2^32." -->
				<type>SPM</type>
				<latency>1</latency>
				<write_latency>1</write_latency>
				<cachable>false</cachable>
				<writable>true</writable>
			</bank>

		</banks>
	</memory>
</platform>

<script>
	<step require="otawa::VIRTUALIZED_CFG_FEATURE"/>
	<step require="otawa::etime::EDGE_TIME_FEATURE"/>
	<step require="otawa::ipet::WCET_FEATURE"/>
</script>

</otawa-script>
